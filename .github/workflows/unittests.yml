name: Unittest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  schedule:
    - cron: '0 2 * * 1'  # every Monday at 2:00am

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.11

    - name: Setup Miniforge3
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Miniforge3
        miniforge-version: latest
        activate-environment: ceasiompy
        use-mamba: false
        conda-version: 25.3.1

    - name: Set cache date # With that, cache will be updated
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - uses: actions/cache@v4
      with:
        path: /usr/share/miniconda3/envs/ceasiompy
        key: ubuntu-latest-conda-${{ env.DATE }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      id: cache

    - name: Update environment
      run: conda env update -n ceasiompy -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Install ceasiompy with pip
      shell: bash -l {0}
      run: pip install -e .

    - name: Install libGLU
      run: sudo apt-get install -y libglu1-mesa-dev

    - name: Install Pentagrow
      shell: sudo bash -l {0}
      run: |
        installation/Ubuntu/install_pentagrow.sh

    - name: Run unit tests
      shell: sudo bash -l {0}
      run: |
        source ~/.bashrc
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        conda activate ceasiompy
        pytest -v src/ceasiompy --cov=ceasiompy --cov-report xml:coverage.xml

    - name: Upload coverage to Codecov
      if: github.repository == 'cfsengineering/CEASIOMpy' && secrets.CODECOV_TOKEN != ''
      uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
        verbose: true
