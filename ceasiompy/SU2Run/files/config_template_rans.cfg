%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: VKI turbine                                                %
% Author: Francisco Palacios, Thomas D. Economon	                           %
% Institution: Stanford University                                             %
% Date: Feb 18th, 2013                                                         %
% File Version 8.0.0 "Harrier"                                                 %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
SOLVER= RANS
%
KIND_TURB_MODEL= SA
%
MATH_PROBLEM= DIRECT
%
RESTART_SOL= NO
%
SYSTEM_MEASUREMENTS= SI

% -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%
%
MACH_NUMBER= 0.3
%
AOA= 0.0
%
FREESTREAM_PRESSURE= 1.013E5
%
FREESTREAM_OPTION= DENSITY_FS
%
FREESTREAM_DENSITY = 1.255
%
FREESTREAM_TEMPERATURE =288.15
%
REYNOLDS_NUMBER= 4E6
%
REYNOLDS_LENGTH= 1.0

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
REF_ORIGIN_MOMENT_X = 0.00
%
REF_ORIGIN_MOMENT_Y = 0.00
%
REF_ORIGIN_MOMENT_Z = 0.00
%
REF_LENGTH= 45.0
%
REF_AREA= 1
% Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,
%                                           FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE)
REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE
%
% ----------------------- BOUNDARY CONDITION DEFINITION -----------------------%
%
MARKER_HEATFLUX = (S4CreatedbyGmsh, 0.0)
%
MARKER_FAR= (S3Farfield)
%
%MARKER_SYM =()
%
% ------------------------ SURFACES IDENTIFICATION ----------------------------%
%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= (S4CreatedbyGmsh)
%
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= (S4CreatedbyGmsh)

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
NUM_METHOD_GRAD= GREEN_GAUSS
%
CFL_NUMBER= 1
%
CFL_ADAPT= NO
%
CFL_ADAPT_PARAM= ( 0.5, 1, 1.0, 100.0 )
%
ITER = 5000

% Objective function in gradient evaluation   (DRAG, LIFT, SIDEFORCE, MOMENT_X,
%                                             MOMENT_Y, MOMENT_Z, EFFICIENCY, BUFFET,
%                                             EQUIVALENT_AREA, NEARFIELD_PRESSURE,
%                                             FORCE_X, FORCE_Y, FORCE_Z, THRUST,
%                                             TORQUE, TOTAL_HEATFLUX,
%                                             MAXIMUM_HEATFLUX, INVERSE_DESIGN_PRESSURE,
%                                             INVERSE_DESIGN_HEATFLUX, SURFACE_TOTAL_PRESSURE, 
%                                             SURFACE_MASSFLOW, SURFACE_STATIC_PRESSURE, SURFACE_MACH)
% For a weighted sum of objectives: separate by commas, add OBJECTIVE_WEIGHT and MARKER_MONITORING in matching order.
OBJECTIVE_FUNCTION= DRAG

% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%
% Linear solver or smoother for implicit formulations:
% BCGSTAB, FGMRES, RESTARTED_FGMRES, CONJUGATE_GRADIENT (self-adjoint problems only), SMOOTHER.
LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver or type of smoother (ILU, LU_SGS, LINELET, JACOBI)
LINEAR_SOLVER_PREC= ILU
%
% Minimum error of the linear solver for implicit formulations
LINEAR_SOLVER_ERROR= 1E-12
%
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 3
%
% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 1000
%
% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-10
% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, AUSMPLUSUP,
%                              AUSMPLUSUP2, HLLC, TURKEL_PREC, MSW, FDS, SLAU, SLAU2)
CONV_NUM_METHOD_FLOW= JST
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT
%
% -------------------- TURBULENT NUMERICAL METHOD DEFINITION ------------------%
% Convective numerical method (SCALAR_UPWIND)
CONV_NUM_METHOD_TURB= SCALAR_UPWIND
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the turbulence equations.
%           Required for 2nd order upwind schemes (NO, YES)
MUSCL_TURB= NO
%
% Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,
%                BARTH_JESPERSEN, VAN_ALBADA_EDGE)
SLOPE_LIMITER_TURB= VENKATAKRISHNAN
%
% Time discretization (EULER_IMPLICIT)
TIME_DISCRE_TURB= EULER_IMPLICIT
% -------------------------- MULTIGRID PARAMETERS -----------------------------%
%
% Multi-Grid Levels (0 = no multi-grid)
MGLEVEL = 3
%
% Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE)
MGCYCLE = W_CYCLE
%
% Multi-Grid PreSmoothing Level
MG_PRE_SMOOTH = ( 1.0, 2.0, 3.0, 3.0 )
%
% Multi-Grid PostSmoothing Level
MG_POST_SMOOTH = ( 0.0, 0.0, 0.0, 0.0 )
%
% Jacobi implicit smoothing of the correction
MG_CORRECTION_SMOOTH = ( 0.0, 0.0, 0.0, 0.0 )
%
% Damping factor for the residual restriction
MG_DAMP_RESTRICTION = 0.9
%
% Damping factor for the correction prolongation
MG_DAMP_PROLONGATION = 0.9
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -12
%
% Start convergence criteria at iteration number
CONV_STARTITER= 10
%

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
MESH_FILENAME= labair_penta.su2
%
MESH_FORMAT= SU2
%
MESH_OUT_FILENAME= mesh_out.su2
%
SOLUTION_FILENAME= solution_flow.dat
%
HISTORY_OUTPUT = (INNER_ITER, RMS_RES, AERO_COEFF)
%
TABULAR_FORMAT= CSV
%
CONV_FILENAME= history
%
RESTART_FILENAME= restart_flow.dat
%
RESTART_ADJ_FILENAME= restart_adj.dat
%
VOLUME_FILENAME= flow
%
SURFACE_FILENAME= surface_flow
%
OUTPUT_WRT_FREQ= 100
%
BREAKDOWN_FILENAME = forces_breakdown_def.dat
%
WRT_FORCES_BREAKDOWN = YES
%
SCREEN_OUTPUT= (INNER_ITER, RMS_DENSITY, RMS_ENERGY, LIFT, DRAG)